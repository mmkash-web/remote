# Generated by Django 4.2.7 on 2025-10-03 06:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Router',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('vpn_ip', models.GenericIPAddressField(help_text='VPN tunnel IP (e.g., 10.10.0.2)')),
                ('api_port', models.IntegerField(default=8728, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(help_text='Router admin password', max_length=255)),
                ('status', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline'), ('ERROR', 'Error'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('last_online', models.DateTimeField(blank=True, null=True)),
                ('router_model', models.CharField(blank=True, max_length=100)),
                ('router_version', models.CharField(blank=True, max_length=50)),
                ('router_identity', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routers_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Router',
                'verbose_name_plural': 'Routers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RouterLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('SUCCESS', 'Success')], max_length=10)),
                ('action', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('router', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='routers.router')),
            ],
            options={
                'verbose_name': 'Router Log',
                'verbose_name_plural': 'Router Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['router', '-created_at'], name='routers_rou_router__2b773b_idx'), models.Index(fields=['log_type', '-created_at'], name='routers_rou_log_typ_98ddbd_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='router',
            index=models.Index(fields=['status', 'is_active'], name='routers_rou_status_f54edd_idx'),
        ),
        migrations.AddIndex(
            model_name='router',
            index=models.Index(fields=['vpn_ip'], name='routers_rou_vpn_ip_958551_idx'),
        ),
    ]
